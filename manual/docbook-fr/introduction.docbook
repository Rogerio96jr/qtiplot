<chapter id="introduction">
<title>Introduction</title>

<!-- The introduction chapter contains a brief introduction for the
application that explains what it does and where to report
problems. Basically a long version of the abstract.  Don't include a
revision history. (see installation appendix comment) -->

<sect1 id="sec-qtiplot-intro">
<title>Que fait donc &appname; </title>

<para>&appname; est un programme de représentation graphique et d'analyse de données à deux et trois dimensions. Les graphes peuvent être produits à partir de données issues de <link linkend="sec-intro-table">tables</link> ou à partir de fonctions analytiques.</para>
<para>Le projet a été créé par &ion; en 2000. Ion a été le seul programmeur de 2000 à 2005. Depuis 2006, de nouveaux contributeurs l'ont rejoint et le projet est désormais hébergé sur <ulink url="www.berlios.de/projects/qtiplot/">BerliOS</ulink>. L'objectif du logiciel est de fournir un outil pour l'analyse et la représentation de données tel un logiciel commercial comme Origin.</para>

<para>&appname; est un outil dynamique : les graphbes créés à partir d'un jeu de données et les tables de ces données sont interconnectées. Quand une table est modifiée,tous les objets qui en dépendent (courbes, échelles, légendes), sont automatiquement modifés. Par exemple, effacer une table, ou quelques colonnes, supprimera automatiquement, les courbes correspondantes. Les graphes peuvent être exportés en plueisurs formats graphiques (jpeg, png, bmp, pdf, etc) et insérer comme images dans des documents ou des présentations. </para>

<para>Tous les paramètres des tables, projets et graphes peuvent être sauvegardés dans un fichier projet ayant une extension ".qti". Ces fichiers projets peuvent être ouverts en utilisant la <link linkend="specify-a-file"> ligne de commande</link>, le <link linkend="sec-file-menu">menu Fichier</link>, ou en utilisant l'icone <emphasis>Ouvrir un projet</emphasis> à partir de la <link linkend="sec-file-toolbar">barre d'outil Fichier</link>.</para>

<para>Les opérations d'analyse de données (integration, interpolation, FFT, ajustement de courbe, etc.) peuvent être réalisés sur les courbes 2D via le menu Analyse. Les résultats de ces opérations sont aussi enregistrés dans le fichiers projet. Il peuvent être visualisés en utilisqant à tout moment, le &results-log-lnk; et peuvent être effacés via la and can be deleted from the project file via the &clear-log-lnk;.</para>

<para>Quand l'application est lancée, un nouveau fichier projet snas nom est créé, consistant en une fenêtre grise principale (l'environnement de traail) qui peut contenir initailement, une fenêtre vide, selon vos préférences. Le type de cette fenêtre peut être personnalisée en utilisant la <link linkend="preferences-dialog">Preferences dialog</link>. Elle peut être une table, une matrice, un commentaire ou un graphe 2D vide. Afin d'être opérationnel, cette fençetre doit contenir au moins un de ces objets. Les tables ou matrices vides, peuvent créées manuellement (&new-table-lnk;) et remplies avec des données ou bien créées en important un fichier ASCII (&import-ascii-lnk;), ce qui créer automatiquement une nouvelle table.</para>

<para>L'utilisateur peut facilement naviguer dans le projet à l'aide de l'explorateur de projet ou des menus. L'explorateur de projet permet aussi à l'utilisateur de réaliser diverses opéraions sur la fenêtre (tables et graphes) comme : cacher, minimiser, fermer, renommer, imprimer, etc.</para>

</sect1>

<sect1 id="command-line-options">
<title>Paramètres en ligne de commande</title>
<sect2 id="specify-a-file">
	<sect2info><indexterm><primary>Paramètres en ligne de commande</primary><secondary>Spécifier un fichier</secondary></indexterm></sect2info>
<title>Spécifier un fichier</title>

<para>En lançant &appname; à partir de la ligne de commande, vous pouvez indiquer le nom du fichier projet :</para>

<screen>
qtiplot nom_fichier.&file-ext;
</screen>

<para>D'autres formats sont acceptés comme : <emphasis>.opj, .ogm, .ogw, .ogg</emphasis> pour les projets Origin, et <emphasis>.qti, qti.gz</emphasis> pour les projets &appname;.</para>
<para>Le nom peut aussi faire référence à un fichier texte (ASCII) :</para>

<screen>
qtiplot nom_fichier_texte
</screen>

<para>Dans ce dernier cas, un nouveau projet "Sans nom" sera créé, contenant une table avec les données du fichier ASCII ainsi qu'un graphe 2D de toutes les colonnes en fonction de la première colonne du fichier. L'utilisateur doit s'assurer que le fichier texte est proprement formaté. Le fichier sera lu et interprété en utilisant les préférences de la boite de dialogue &import-ascii-lnk;. Les valeurs par défaut de ces préférences sont :</para>
<itemizedlist>
  <listitem><para>le séparateur par défaut est ";" mais peut être changé dans la boite de &preferences-lnk;,</para></listitem>
  <listitem><para>toutes les lignes sont lues,</para></listitem>
  <listitem><para>la première lignes est utilisée pour les noms de colonnes,</para></listitem>
  <listitem><para>les espaces de fin de ligne ne sont pas supprimées,</para></listitem>
  <listitem><para>les espaces ne sont pas simplifiées.</para></listitem>
</itemizedlist>

</sect2>

<sect2 id="qtiplot-options">
	<sect2info><indexterm><primary>Les options en ligne de commande</primary><secondary>Options</secondary></indexterm></sect2info>
<title>Les options en ligne de commande</title>

<para>Les options possibles sont :</para>
<itemizedlist>
<listitem><para>-a ou --about : affiche la boîte de dialogue "À propos" puis quitte</para></listitem>
<listitem><para>-c ou --console : affiche la fenêtre de script uniquement</para></listitem>
<listitem><para>-d ou --default-settings : lance &appname; avec les valeurs par défaut</para></listitem>
<listitem><para>-h ou --help : affiche les options de la ligne de commande</para></listitem>
<listitem><para>-l=XX ou --lang=XX : lance &appname; avec la langue XX ('en', 'fr', 'de', ...)</para></listitem>
<listitem><para>-m ou --manual : affiche le manuel de &appname; uniquement</para></listitem>
<listitem><para>-v ou --version : indique la version et la date de révision de &appname;</para></listitem>
<listitem><para>-x ou --execute : exécute le fichier de script passé en argument</para></listitem>
<listitem><para>-X : exécute le fichier de script passé en argument sans montrer l'interface utilisateur.
Attention : Les graphes 2D ne sont pas encore correctement gérés dans ce mode !</para></listitem>
</itemizedlist>
</sect2>
</sect1>

<sect1 id="general-concepts">
<title>Concepts généraux et termes utilisés</title>
<para>Plusieurs graphes et les données associées peuvent être sauvegardées dans un fichier <emphasis>projet</emphasis>. Le projet est alors, le conteneur principal de &appname;. Les copies d'écrans suivantes donnent un exemple d'une session typique. Cette exemple montre le <link linkend="sec-intro-log-window">panneau de log</link> au dessus de l'environnement de travail, l'<link linkend="sec-intro-project-explorer">explorateur de projet</link> en dessous, ainsi qu'une<link linkend="sec-intro-table">table</link> et un <link linkend="sec-intro-plot-window">graphe</link>. D'autres fenres sont soit minimisées soit cachées.</para>

<figure id="fig-qtiplot-session">
  <title>Une session typique de &appname;</title>
  <mediaobject>
    <imageobject>
      <imagedata  format="PNG" fileref="pics/qtiplot-session.png"/>
    </imageobject>
  </mediaobject>
</figure>
<para><emphasis>Note générale sur le style windows MDI.</emphasis> &appname; utilise le style Multiple Document Interface (MDI) pour ces sous-fençetres (par exemple pour les graphes, le stables, etc.). C'est un mécanisme pratique pour placer des sous-fenêtre sur une fenêtre mère (la fenêtre projet). De telles collections de fenêtres sont alors gérées comme un lors des déplacements ou des minimisations des fenêtres. However, the behavior of maximized sub-windows is one feature of the MDI interface that may cause some confusion at first. As would be expected, sub-windows maximize to the size of the main window's workspace rather than to the size of the screen, but the default for maximized sub-windows is to have no title bar. As a consequence, there are no control boxes attached to the window, leaving the (incorrect) impression that once maximized, control boxes can no longer be used to minimize, normalize or close the sub-window. However, control boxes for a maximized sub-window are still present, they have just been moved to the extreme right hand side of the main window's menu bar. Since only one sub-window can be maximized at a time, there is no ambiguity regarding which sub-window this set of control boxes will operate upon. Finally, as a reminder of which sub-window is maximized, the Name and label of the maximized sub-window are appended to main window's title as:</para>
<para>    "&appname; - ProjectName - [WindowName - WindowLabel]"</para>
<para> </para>

<para>There are numerous commands available in &appname;. The specific subset of commands available depends on the element which is selected. Therefore, the main menu bar changes when you select a particular element of the project. Moreover, you can access the set of commands relevant to a given element by activating the context menu with the right button of the mouse when the mouse pointer is floating over the chosen element.</para>
<para>In a project, the containers which can be used are:</para>

<variablelist>
  <varlistentry>
    <term><link linkend="sec-intro-table">A Table</link></term>
    <listitem>
      <indexterm><primary>table</primary></indexterm>
      <para>A table is a spreadsheet like object which can be used to store the data you are entering. The table is contained in its own window (the Table Window). It can be used to perform some calculations and statistical analysis of that data.
      In each table, columns can be labeled as X-values or Y-values for 2D-plotting, or Z-values if you plan to build a
      3D-plot.</para>
      <para>A table can be created using the &new-table-lnk;. There are then several ways to fill the table with data.
      If you want to read your data from an ASCII file, you can import it from the file into a table using the &import-ascii-lnk;. You can also manually enter each value from the keyboard. Finally, you can fill the table with the results of evaluating a mathematical function using the (&set-column-values-lnk; from the &table-menu-lnk;)</para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><link linkend="sec-intro-matrix">A Matrix</link></term>
    <listitem>
      <indexterm><primary>matrix</primary></indexterm>
      <para>A matrix is a special table which is used to store the data points for surface 3D plots. It contains Z-values and doesn't include any column or row which could be designed as X-values or Y-values. Nevertheless, you can specify the X-values and the Y-values with the &set-dimensions-lnk; command from the &matrix-menu-lnk;.</para>
      <para>A matrix is created using the &new-matrix-lnk;. If you want to read matrix data from an ASCII file, you can import the data from the file into a table using the &import-ascii-lnk;, and then convert this table to a matrix with the &convert-to-matrix-lnk;. In the same way as for tables, you can also fill a matrix with the results of evaluating a function z=(i,j) in which i and j are row and column numbers (&set-values-lnk; from the &matrix-menu-lnk;)</para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><link linkend="sec-intro-plot-window">A Graph</link></term>
    <listitem>
      <indexterm>
        <primary>graph</primary>
      </indexterm>
      <para>A graph can contain one or several <emphasis>layers</emphasis>. A layer consists of axes, text items, graphics, and a single <emphasis>plotting area</emphasis> bounded by the axes lines. One or more <emphasis>curves</emphasis>, generated from data or functions, are placed into the plotting area to create a <emphasis>plot</emphasis>. Layers and their contained plots can be arranged in many ways to build matrix of plots. Throughout this document, the term <emphasis>plot window</emphasis> is used as a synonym for a graph.</para>
      <para>A new layer can be added to an existing graph with the &add-layer-lnk; from the &graph-menu-lnk;. you can also remove an existing layer with the &remove-layer-lnk;, but if you remove a layer, the plot on that layer will also be deleted. You can also copy a layer from one graph to another, or copy an existing graph into another (the window will be added as a new layer - see the section on <link linkend="sec-multilayer-plots">Multilayer Plots</link> for more details).</para>
      <para>Curves can be added to a plot in several ways. You can select data from tables or matrices to generate the curve, or, create a curve from a function of one or two variables (see sections <link linkend="sec-2d-plots">2D plots</link> and <link linkend="sec-3d-plots">3D plots</link>).</para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><link linkend="sec-intro-note">A Note</link></term>
    <listitem>
      <para>This window is a text container which can simply be used to insert comments
      into a project, but is really far more powerful than that.
      It can be used as a calculator, for executing single commands, and for writing scripts.</para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><link linkend="sec-intro-log-window">The Log Window</link></term>
    <listitem>
      <para>This window is used to store the results of all calculations which have been done. If this window is not visible, you can find it with the <link linkend="sec-intro-project-explorer">Project Explorer</link> or with the &results-log-lnk;.</para>
      <para>The text in the log window is also saved in the project file, so that when you load a previously saved project, the results-log panel is re-filled with the results of previous calculations.</para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><link linkend="sec-intro-project-explorer">The Project Explorer</link></term>
    <listitem>
      <para>This window is used to list all the windows contained in a project. The <link linkend="project-explorer-dialog">Project Explorer</link> gives quick access to all elements of a project, hidden or visible. It can be used to perform some operations on the listed windows such as hiding a window, renaming a window, etc.</para>
      <para>Since version 0.8.5, a project file can include several independent projects. In this case, the containers of each project are stored in different folders.</para>
    </listitem>
  </varlistentry>
</variablelist>

<!--
		General description of a table
		==============================
-->
<sect2 id="sec-intro-table">
<title>Tables</title>

      <indexterm><primary>table</primary></indexterm>
<para>
When working with data, tables are the main focus of &appname;. Fundamentally, a table is simplified spreadsheet contained in a Window which can be used to control, edit, and convert data. Tables are also highly customizable: all colors and font preferences can be set using the &preferences-lnk; of the &view-menu-lnk;, and you can resize a table in terms of rows and columns using the &table-menu-lnk; with &rows-lnk; or &columns-lnk;.
</para>

<figure id="fig-the-table">
  <title>The &appname; table</title>
  <mediaobject>
    <imageobject>
      <imagedata  format="PNG" fileref="pics/table.png"/>
    </imageobject>
  </mediaobject>
</figure>

<para> Every column of a table has a label, and can be assigned a format: numeric, text, date or time. Each column can also have one of the following flags set: X, Y, Z, X-error, Y-error, label, or none (i.e., a simple column without any special flag). X flagged columns are the abscissae while Y flagged columns are the ordinates used when creating a 2D plot from data. A column must have either the X or Y flag set to be available for use in a 2D plot. The X-error and Y-error columns can be used to add error bars to a curve in a 2D plot. Flags can be changed using the <link linkend="column-options-dialog">Column options dialog</link>. To reach this dialog, simply double-click on the column label or use the  &column-options-lnk; from the &table-menu-lnk;.</para>

<para> A table column is selected by left clicking on it's label. Multiple columns are selected in one of 2 ways. First, if the columns are adjacent, it is most convenient to left click on the first desired column's label and, while holding the left mouse button down, drag the mouse pointer over the labels of the column you wish to select. Second, in the case where desired columns are not adjacent, you can select additional columns by keeping the <keycode>Ctrl</keycode> key pressed while left clicking on the desired column's label. This also allows you to deselect specific columns. You can select all the columns of a selected table by pressing (<keycode>Ctrl+A</keycode>).</para>

<para> You can perform various operations on selected columns : fill with data, normalize, sort, view statistics and finally, generate curves from your data. All these functions can be reached by right clicking on the column label or by using the &table-menu-lnk;.</para>

<para> All other table functions: rename, duplicate, export, print, and close can be reached via the context menu (right click anywhere in the table outside the column labels area). </para>

<para> You can cut, copy and paste data between tables or between a table and another application (Excel, Gnumeric, etc.).</para>

<para> You can import single or multiple ASCII files using the &import-ascii-lnk; from the &file-menu-lnk;. Of course you can also export the data from a table to a text file using the &export-ascii-lnk;.</para>

</sect2>

<!--
		General description of a matrix
		===============================
-->
<sect2 id="sec-intro-matrix">
<title>Matrix</title>

      <indexterm><primary>matrix</primary></indexterm>
<para>The matrix is a special table which is used for data which depends on two variables.
This special table can be used to create 3D plots as well as 2D image/contour plots
via the &plot3d-menu-lnk; and the &plot3d-toolbar-lnk;.

One difference between a table and a matrix is that matrices may function in one of two modes:
they can display data in table form or they can display an image. Therefore matrices can be
used as a basic image viewer and also as an image editor, since they implement some image manipulation functions like: 90 degrees rotation, horizontal and vertical mirroring, etc.</para>

<para>In a matrix there is no special column nor special row for X or Y labels or values. Nevertheless,
you can specify an X-scale and a Y-scale with the &set-dimensions-lnk;.</para>

<figure id="fig-matrix">
  <title>The &appname; matrix</title>
  <mediaobject>
    <imageobject>
      <imagedata  format="PNG" fileref="pics/matrix.png"/>
    </imageobject>
  </mediaobject>
</figure>

<para>The values which are stored in a matrix can be generated from a function of the form
z=f(i, j, x, y) with the &set-values-lnk;,
i and j being the column and row numbers and x and y the corresponding coordinates.

They can also be read directly from an ASCII file with the &import-ascii-lnk; or from an image file.</para>

</sect2>

<!--
		General description of a plot window (aka graph)
		====================================
-->
<sect2 id="sec-intro-plot-window">
<title>Plot Window</title>

<para>The plot window (that is, a graph), provides a container for plotting data. It contains one or more layers, which are the main containers of a graph. Each layer contains a plotting area into which curves are placed when creating a plot. Each layer has its own geometry and graphic properties (background color, frame, etc). The example presented below shows a graph with two layers which have different geometries.</para>

<figure id="fig-plot-window">
  <title>An example of &appname; 2D graph</title>
  <mediaobject>
    <imageobject>
      <imagedata  format="PNG" fileref="pics/plot-window.png"/>
    </imageobject>
  </mediaobject>
</figure>

<para>Each layer can be activated by clicking on its corresponding gray button  <inlinemediaobject><imageobject><imagedata format="PNG" fileref="pics/layer-button.png"/></imageobject></inlinemediaobject> in the top-left corner of the window.</para>

<para>Some graph elements can be accessed by a double click on an element in a layer. These are:</para>

<itemizedlist>
<listitem>
<para>the graph itself: this will open the <link linkend="custom-curves-dialog">Custom Curve Dialog</link>. You can then add new curves to the plot, or change the way the curves are plotted.</para>
</listitem>
<listitem>
<para>The axes or the axes labels: this will open the <link linkend="plot-options-dialog">General Plot Options Dialog</link>. It is used to customize the axes, the numbers and labels of the axes, and the grid.</para>
</listitem>
<listitem>
<para>Text items, including the legend: this will open the <link linkend="text-options-dialog">Text Options Dialog</link> which allows customizing the font of the label and the frame in which it is drawn.</para>
</listitem>
<listitem>
<para>Arrow/Line items: this will open the <link linkend="arrow-dialog">Line Options Dialog</link>.</para>
</listitem>
<listitem>
<para>Image items: this will open a dialog allowing you to customize the geometry and the position of the image.</para>
</listitem>
</itemizedlist>

<para>A left click on a layer element selects it. You can deselect any element by pressing the <emphasis>Escape</emphasis> key.
A right click on a layer element pops-up a context menu allowing quick access to its properties dialog.
Last but not least, you should know that &appname; provides multiple selection for objects in a layer.
In order to add an object to an existing selection keep the <emphasis>Shift</emphasis>
key pressed and click on the element you want to add to the selection.
Elements in a multiple selection can be moved and resized together with the mouse.</para>

</sect2>

<!--
		General description of a note
		===========================================
-->
<sect2 id="sec-intro-note">
<title>Note</title>

<para>A note can simply be used to insert text (comments, notes, etc) into a project,
  but is really far more powerful than that. It can be used as a calculator,
  for executing single commands and for writing scripts.
  Evaluation of mathematical expressions and execution of code is done via a note's context menu,
  the Scripting menu or convenient keyboard shortcuts.
  For information on expression syntax, supported mathematical functions and how to write scripts,
  see <link linkend="scripting">here</link>.</para>

<figure id="fig-note-window">
  <title>The &appname; Note Window</title>
  <mediaobject>
    <imageobject>
      <imagedata  format="PNG" fileref="pics/new-note1.png"/>
    </imageobject>
  </mediaobject>
</figure>

<para>Note windows provide powerful text editor functionalities, particularly helpful
when writing scripts: customizable Python syntax highlighting, line number display, find and replace text,
and autocompletion suggestions for words having more than two characters.
You can manually trigger autocompletion by using Ctrl+U. The colors used for syntax highlighting can be customized
via the <emphasis>Notes</emphasis> tab in the <link linkend="fig-preferences-dialog-notes">Preferences dialog</link>.</para>
</sect2>

<!--
		General description of the log window
		=====================================
-->
<sect2 id="sec-intro-log-window">
<title>Log Window</title>

<para>This window keeps a history of all analysis which has been done in the project. It panel contains the results of all the correlations, fittings, etc.</para>

<figure id="fig-log-window">
  <title>The &appname; Log window</title>
  <mediaobject>
    <imageobject>
      <imagedata  format="PNG" fileref="pics/log-window.png"/>
    </imageobject>
  </mediaobject>
</figure>
</sect2>

<!--
		General description of the project explorer
		===========================================
-->
<sect2 id="sec-intro-project-explorer">
<title>The Project Explorer</title>

<para>The project explorer can be opened/closed using the &project-explorer-lnk; from the &view-menu-lnk; or by clicking on the &project-explorer-icon; in the <link linkend="sec-file-toolbar">file toolbar</link>.</para>

<figure id="fig-project-explorer">
  <title>The &appname; Project Explorer</title>
  <mediaobject>
    <imageobject>
      <imagedata  format="PNG" fileref="pics/explorer1.png"/>
    </imageobject>
  </mediaobject>
</figure>

<para>It gives an overview of the structure of a project and allows the user to perform various operations on the windows (tables, graphs, and notes) in the workspace: hiding, minimizing, closing, renaming, printing, etc. These functions can be reached via the context menu, obtained by right-clicking on an item in the explorer.</para>
<para>By double-clicking on an item, the corresponding window is shown maximized in the workspace, even if it was hidden before.</para>
<para>From the project explorer window, different objects can be organized into folders. When selecting a folder, the default policy is that only the objects contained in it will be shown in the workspace window. You can also display all the objects in subfolders if you change this policy with the "View Windows" command to "Windows in Active Folder and Subfolders".</para>

</sect2>

</sect1>

</chapter>
